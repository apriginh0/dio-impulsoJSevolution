Javascript é uma linguagem de programação de alto nível, que integra o
desenvolvimento de apps e páginas web.
É uma das linguagens de programação mais usada no mundo do desenvolvimento.

Como surgiu?
Em 1995 o programador Brendan Eich que trabalhava na Netscape, implementou uma
linguagem de programação chamada Mocha, depois o nome mudou para LiveScript, mas
na época a linguagem Java era muito popular, então mudara LiveScript para
Javascript como jogada de marketing.

Para quê serve?
Para criar scripts dinâmicos que realizam a interação de apps ou páginas web.
Imagine que o HTML é a estrutura, o CSS é o design, o Javascript é a parte
interativa do desenvolvimento.

Onde usar?
Podemos usar o Javascript de várias formas, seu uso mais comum se dá no
desenvolvimento de apps e páginas web, juntamente com as linguagens HTML e CSS.

Tipagem?
A tipagem funciona como uma regra de uso de dado, quanto mais forte a tipagem,
mais obrigatório é a declaração do tipo de dado.
A tipagem em Javascript é fraca, a declaração dos dados acontece de modo dinâmico.
Ex: Ao criarmos uma variável com valor entre aspar ("valor"), o Javascript já
converte o dados para o tipo String.
Primitivos: Boolean, null, undefined, Number, String, Array, Object, Function.

O que são variáveis?
São dados que variam. Existem 3 modos de declarar:
var - escopo global e local, pode ter seu valor alterado, se não tiver um
valor inicial será tratada como null;
let - escopo local de bloco, pode ter seu valor alterado, se não tiver um
valor inicial será tratada como null;
const - escopo local de bloco, somente leitura, o valor inicial é obrigatório
e não pode ser alterado;

ESCOPO
O escopo em JavaScript define a limitação e visibilidade de um bloco de código.
Escopo global - quando a variável é declarada fora de qualquer bloco, sua
visibilidade fica disponível em todo o código.
Escopo local - quando a variável é declarada dentro de um bloco, sua
visibilidade pode ficar disponível ou não.

Regras de uso de variáveis
iniciar com letras, underscore_ ou cifrão $; Não iniciar com número.
Ex: var 1nome [errado]
    var nome  [certo]
Não usar espaços(use o camelCase ou _);
Ex: var nome completo [errado]
    var nomeCompleto  [certo]
Não usar palavras reservadas;
Ex: var function [errado]
Declarar variáveis no topo do bloco de código.
Atribuição: =
Comparação: ==
Igualdade(Comparação+Tipo): ===

Operadores Aritiméticos
+ adição
- subtração
* multiplicação
/ divisão real
% divisão inteira(modulo)
** potenciação

Operadores Relacionais
São tipos de operadores que consultam a relação entre valores.
> maior que;
< menor que;
>= maior igual a;
<= menor igual a;

Operadores Lógicos
São tipos de operadores que consultam valores lógicos.
&& - "e" - considera que todos os valore sejam true;
|| - "ou" - considera que qualquer valore seja true;
! - "não" - inverte o valor de true para false ou vice-versa;

Vetores ou Arrays
São um tipo de lista, ou matriz de variáveis, onde cada variável possui um
índice. Os valores podem ser de vários tipos.
Imagina que um array é uma caixa com várias outras caixas dentro e cada uma
contendo algum valor.
O array deve ser declarado entre colchetes "[]", e pode guardar qualquer valor
dentro de seus índices: inclusive outros arrays.
Ex: let array = ['string', 1, true, false, ['array1'], ['array2']...]
Obs: O índice só é acessado por uma número inteiro, onde 0 é o primeiro índice.
Cada índice é separado por vígula.

Manipulando Arrays
Ao ser declarado, o Array traz consigo uma série de métodos para manipulá-lo.
forEach() - itera um array;
push() - add item no final do array;
pop() - remove item no final do array;
shift() - remove item no início do array;
unshift() - add item no início do array;
indexOf() - retorna o índice de um valor;
splice() - remove ou substitui um item pelo índice;
slice() - retorna uma parte de um array existente;
